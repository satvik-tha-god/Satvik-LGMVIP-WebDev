{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","components/Scroll.js","components/Navigation/Navigation.js","containers/loader.js","containers/App.js","index.js"],"names":["SearchBox","searchfeild","searchChange","className","type","placeholder","onChange","Card","name","email","id","lname","alt","src","CardList","robots","map","user","i","first_name","last_name","Scroll","props","style","overflowY","border","height","children","Navigation","onButtonSubmit","onClick","LoaderComp","color","width","timeout","App","setState","isButtonClicked","timer","setTimeout","fetch","then","response","json","users","data","clearTimeout","onSearchChange","event","target","value","state","filteredRobots","this","filter","toLowerCase","includes","length","fontSize","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eeef0fc9.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./components.css\";\r\n\r\nconst SearchBox = ({\r\n  searchfeild,\r\n  searchChange\r\n}) => {\r\n  return ( <\r\n    div className = 'pa2' >\r\n    <\r\n    input className = 'Search'\r\n    type = \"search\"\r\n    placeholder = 'search by name'\r\n    onChange = {\r\n      searchChange\r\n    }\r\n    /> <\r\n    /div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport './components.css';\r\n\r\nconst Card = ({\r\n  name,\r\n  email,\r\n  id,\r\n  lname\r\n}) => {\r\n  //Displays all the information in a card format\r\n  return ( <\r\n    div className = \"card\" >\r\n    <\r\n    img alt = 'robots'\r\n    src = {\r\n      `https://reqres.in/img/faces/${id}-image.jpg`\r\n    }\r\n    /> <\r\n    div >\r\n    <\r\n    br / >\r\n    <\r\n    h2 className = \"title\" > {\r\n      name\r\n    } {\r\n      lname\r\n    } < /h2> <\r\n    br / >\r\n    <\r\n    h3 > {\r\n      email\r\n    } < /h3> <\r\n    /div> <\r\n    /div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport '../containers/styles.css';\r\n\r\n\r\nconst CardList = ({\r\n  robots\r\n}) => {\r\n  return ( <\r\n    center >\r\n    <\r\n    div > {\r\n      //displays all the card by calling the card component and passing all the values\r\n      robots.map((user, i) => {\r\n        return ( <\r\n          Card key = {\r\n            i\r\n          }\r\n          id = {\r\n            robots[i].id\r\n          }\r\n          name = {\r\n            robots[i].first_name\r\n          }\r\n          lname = {\r\n            robots[i].last_name\r\n          }\r\n          email = {\r\n            robots[i].email\r\n          }\r\n          />\r\n        );\r\n      })\r\n    } <\r\n    /div> <\r\n    /center>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    //used to provide a scroll view\r\n    <\r\n    div style = {\r\n      {\r\n        overflowY: 'scroll',\r\n        border: '1px solid black',\r\n        height: '1200px'\r\n      }\r\n    } > {\r\n      props.children\r\n    } <\r\n    /div>\r\n  )\r\n};\r\n\r\nexport default Scroll;\r\n","import React from 'react';\r\n// import Button from '@material-ui/core/Button';\r\nimport './Navbar.css';\r\n\r\nconst Navigation = ({onButtonSubmit}) => {\r\n\r\n            return(\r\n                //used to provide the button funtionality and displays the logo\r\n                <nav className='navbar'>\r\n                    <div className='nav-links'>\r\n                        <button onClick={onButtonSubmit} className=\"button\">\r\n                            Get Users\r\n                        </button>\r\n                    </div>\r\n                </nav>\r\n            );\r\n        }\r\n\r\n//{onRouteChange, isSignedIn}\r\nexport default Navigation;\r\n","import Loader from \"react-loader-spinner\";\r\nimport './styles.css';\r\n\r\nconst LoaderComp = () => {\r\n  return (\r\n    //used to display the loader when the api is fetching data\r\n    <\r\n    div className = 'app' >\r\n    <\r\n    Loader type = \"TailSpin\"\r\n    color = \"white\"\r\n    height = {\r\n      300\r\n    }\r\n    width = {\r\n      300\r\n    }\r\n    timeout = {\r\n      3000\r\n    }\r\n    /> <\r\n    /div>\r\n  );\r\n}\r\nexport default LoaderComp\r\n","import React, {\r\n  Component\r\n} from 'react';\r\nimport SearchBox from '../components/SearchBox';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport Navbar from '../components/Navigation/Navigation';\r\nimport Loader from './loader';\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n    //defining the states\r\n    this.state = {\r\n      robots: [],\r\n      searchfeild: '',\r\n      isButtonClicked: false\r\n    }\r\n  }\r\n\r\n  //function when the button is clicked .\r\n  //it fetches the api\r\n  //and stores in robots\r\n  onButtonSubmit = () => {\r\n    //changes the state of the button is clicked\r\n    this.setState({\r\n      isButtonClicked: !this.isButtonClicked\r\n    })\r\n    const timer = setTimeout(() => {\r\n      //fetches the api which is provided in letsgrowmore\r\n      fetch('https://reqres.in/api/users?page=1').then(response => {\r\n          return response.json();\r\n        })\r\n        .then(users => {\r\n          this.setState({\r\n            robots: users.data\r\n          })\r\n        });\r\n    }, 3000);\r\n    return () => clearTimeout(timer);\r\n  }\r\n\r\n  //function used to change the searchfield\r\n  onSearchChange = (event) => {\r\n    this.setState({\r\n      searchfeild: event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    //used to filter the robots bt their first name\r\n    const filteredRobots = this.state.robots.filter(robots => {\r\n      return robots.first_name.toLowerCase().includes(this.state.searchfeild.toLowerCase());\r\n    })\r\n\r\n    //at the starting\r\n    //when the user has not clicked the button\r\n    //and the api is not fetched\r\n    if (this.state.robots.length === 0 && this.state.isButtonClicked === false) {\r\n      return ( <\r\n        >\r\n        <\r\n        Navbar onButtonSubmit = {\r\n          this.onButtonSubmit\r\n        }\r\n        /> <\r\n        h1 className = 'tc' > Please click on get users to get all details < /h1> < / >\r\n      );\r\n\r\n    }\r\n\r\n    //when the button is clicked and the api is being called\r\n    //but no data is fetched\r\n    else if (this.state.robots.length === 0) {\r\n      return ( <\r\n        >\r\n        <\r\n        Navbar onButtonSubmit = {\r\n          this.onButtonSubmit\r\n        }\r\n        /> <\r\n        h1> Loading... < /h1> <\r\n        Loader className = 'loader' > < /Loader> < / >\r\n      );\r\n    }\r\n\r\n    //when the button is clicked and the api has fetched data\r\n    else {\r\n      return ( <\r\n        >\r\n        <\r\n        Navbar onButtonSubmit = {\r\n          this.onButtonSubmit\r\n        }\r\n        /> <\r\n        div className = 'tc' >\r\n        <\r\n        h1 style={{fontSize: \"50px\"}}> Client Info < /h1> <\r\n        SearchBox searchChange = {\r\n          this.onSearchChange\r\n        }\r\n        /> <\r\n        Scroll className=\"tc\">\r\n        <\r\n        CardList robots = {\r\n          filteredRobots\r\n        }\r\n        /> < /\r\n        Scroll >\r\n        <\r\n        /div> < / >\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\n\r\n\r\nReactDOM.render(\r\n    <App/>\r\n    ,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}